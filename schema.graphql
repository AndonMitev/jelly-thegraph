type NewContractEntity @entity {
  id: ID!

  inputAmount: BigInt! # uint256
  outputAmount: BigInt! # uint256
  expiration: BigInt! # uint256
  hashLock: Bytes! # bytes32
  contractId: Bytes! # bytes32
  sender: Bytes! # address
  receiver: Bytes! # address
  outputNetwork: String! # string
  outputAddress: String! # string
}

type WithdrawEntity @entity {
  id: ID!

  withdrawId: Bytes! # bytes32 indexed
  secret: Bytes! # bytes32
  hashLock: Bytes! # bytes32
  sender: Bytes! # address indexed
  receiver: Bytes! # address indexed
}

type RefundEntity @entity {
  id: ID!

  refundId: Bytes! # bytes32 indexed
  hashLock: Bytes! # bytes32
  sender: Bytes! # address indexed
  receiver: Bytes! # address indexed
}

type NewContractsEntity @entity {
  id: ID!
  swaps: [NewContractEntity!]!
}

type WithdrawsEntity @entity {
  id: ID!
  swaps: [WithdrawEntity!]!
}

type RefundsEntity @entity {
  id: ID!
  swaps: [RefundEntity!]!
}
